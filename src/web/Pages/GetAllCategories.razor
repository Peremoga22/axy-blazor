@page "/get-all-categories"
@inject NavigationManager _navigationManager
@inject IJSRuntime _jsRuntime
@*@bind-value="model.CurrentDate"*@


<i class="fa fa-bar-chart" style="font-size:36px" @onclick="Collaps"></i>

<div class="@(Collapsed? "collapse": "" )">

    <EditForm Model="@model" OnValidSubmit="HandleValidSubmit" class="body  p-3 mb-5 rounded ">
        <DataAnnotationsValidator />
        <div>
            <div class="row d-flex">
                <div class="col-lg-12 form-group">
                    <label for="additional">Start Date:</label>
                    <input type="date" class="form-control" @bind-value="model.StartDate" />
                </div>
            </div>
            <div class="row d-flex">
                <div class="col-lg-12 form-group">
                    <label for="additional">End Date:</label>
                    <input type="date" class="form-control" @bind-value="model.EndDate" />
                </div>
            </div>
            <div class="row d-flex m-2">
                <div class="form-check form-switch">
                    <div class="col-lg-12 form-group">
                        <input type="checkbox" class="form-check-input" @onclick="IsReceiptsExpenditures" @bind-value="model.IsIncome" id="flexSwitchCheckChecked" unchecked />
                        <label class="form-check-label" for="flexSwitchCheckChecked">Income/Outcome </label>
                    </div>                       
                    </div>
                </div>               
            </div>
            <div class="row">
                <div class="ml-lg-3 m-3">
                    <button type="submit" class="btn btn-primary">&nbsp;Search&nbsp;</button>
                    <NavLink class="btn btn-outline-secondary" @onclick="ResetSearch">&nbsp;Cancel&nbsp;</NavLink>
                </div>
            </div>
</EditForm>
</div>

<table class="table table-striped table-bordered table-sm">
    <thead>
        <tr>
            <th class="text-right">Sum</th>
            <th class="text-right">Name</th>
            <th class="text-right">Date Time</th>
            <th class="text-right">Description</th>
            <th class="text-center">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in modelList)
        {

            <tr>
                @if (item.IsIncome)
                {
                    <td class="text-right" style="color:red">@item.SumExpenditure</td>
                    <td class="text-right">@item.NameCategory</td>
                    <td class="text-right">@item.CurrentDate</td>
                    <td class="text-right">@item.DescriptionCategory</td>

                }
                else
                {
                    <td class="text-right" style="color:green">@item.SumReceipt</td>
                    <td class="text-right">@item.NameCategory</td>
                    <td class="text-right">@item.CurrentDate</td>
                    <td class="text-right">@item.DescriptionCategory</td>
                }


                <td class="text-center">
                    <button class="btn btn-sm btn-outline-dark">
                        @*<i style='font-size:14px' @onclick="(() => Edit(item.Id))" class='far fa-edit'></i>*@
                        <img @onclick="(() => Edit(item.Id))" src="https://img.icons8.com/external-kiranshastry-solid-kiranshastry/21/000000/external-edit-interface-kiranshastry-solid-kiranshastry.png" />
                    </button>

                </td>
            </tr>
        }
    </tbody>
</table>



@code {

    IEnumerable<CategoryDto> modelList = new List<CategoryDto>();
    CategoryDto model = new CategoryDto();
    protected bool Collapsed = true;

    protected override async Task OnInitializedAsync()
    {
        modelList = CategoryAdapter.GetCategory();
        model.StartDate = DateTime.Now;
        model.EndDate = DateTime.Now;
    }

    protected void Edit(int id)
    {
        _navigationManager.NavigateTo("/edit-category/" + id);
    }

    private void Collaps()
    {
        Collapsed = !Collapsed;
    }

    private void HandleValidSubmit()
    {
        modelList = CategoryAdapter.GetCategoryList(model);
        model.StartDate = DateTime.Now;
        model.EndDate = DateTime.Now;
        Collapsed = true;
    }

    public void IsReceiptsExpenditures()
    {
        if(!model.IsIncome)
        {
            model.IsIncome = true;
        }
        else
        {
            model.IsIncome = false;
        }
    }

    public void ResetSearch()
    {
        modelList = CategoryAdapter.GetCategory();
    }
}
