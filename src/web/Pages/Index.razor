@page "/"
@inject NavigationManager _navigationManager
@inject IJSRuntime _jsRuntime

<div class="text-center">

    <div>
        <div class="jumbotron">
            <h1 class="display-4">Welcome Axy</h1>
            <EditForm Model="@model" OnValidSubmit="HandleValidSubmit" class="card-body">
                <div class="form-group">
                    <label>Date time</label>
                    <input type="date" class="form-control" name="Model.CurrentDate">
                </div>
                <div class="form-group">
                    @if (!model.IsIncome)
                    {
                        <label for="formGroupExampleInput2">Sum</label>
                        <input class="form-control" id="formGroupExampleInput2" name="Model.SumReceipt" placeholder="Sum">
                    }
                    else
                    {
                        <label for="formGroupExampleInput2">Sum</label>
                        <input class="form-control" id="formGroupExampleInput2" name="Model.SumExpenditure" placeholder="Sum">
                    }

                </div>                               
                 <div class="form-check form-switch">
                        <input type="checkbox" class="form-check-input" @onclick="IsReceiptsExpenditures" id="flexSwitchCheckChecked"  unchecked />
                        <label class="form-check-label" for="flexSwitchCheckChecked" name="Model.IsIncome">Receipts/Expenditures </label>
                 </div>                               
                <br/><br />
                <label for="formGroupExampleInput">Category</label><br />
                <div class="input-group mb-3">
                    @if (!Approved)
                    {                     
                         <InputSelect class="custom-select" @bind-Value="model.ReceiptId">
                             <option value="">Choose an option</option>
                              @foreach (var r in receiptModel)
                              {
                                 <option value="@r.Id">@r.Name</option>
                              }
                         </InputSelect>
                    }
                    else
                    {                     
                         <InputSelect class="custom-select" @bind-Value="model.ExpenditureId">
                             <option value="">Choose an option</option>
                              @foreach (var e in expenditureModel)
                              {
                                 <option value="@e.Id">@e.Name</option>
                              }
                         </InputSelect>
                    }

                    <div class="input-group-append">
                        <label class="input-group-text" for="inputGroupSelect02">
                            <a asp-action="Categories">
                                <i @onclick="(() => Edit())" style='font-size:14px' class='far'>&#xf044;</i>
                            </a>
                        </label>

                    </div>
                </div>
                <div class="form-group">
                    <label for="formGroupExampleInput2">Description</label>
                    <input type="text" class="form-control" id="formGroupExampleInput2" name="Model.DescriptionCategory" placeholder="Add description">
                </div>
                <br />
                <input type="submit" class="btn btn-warning btn-lg" value="Save" />
            </EditForm>
        </div>

        <div class="card">
            <div class="card-body">
                <ul class="list-unstyled text-left">
                    <li>Current balans: @model.CurrentBalance</li>
                    <li>Savings for this month: @model.SavingForThisMounth</li>
                    <li>Balance at the beginning of the month: @model.BalanceTheBeginningMounth</li>
                </ul>
            </div>
        </div>
    </div>
</div>

@code{

    CategoryDto model = new CategoryDto();
    IEnumerable<ReceiptDto> receiptModel = new List<ReceiptDto>();
    IEnumerable<ExpenditureDto> expenditureModel = new List<ExpenditureDto>();
    public bool Approved = false;

    protected override async Task OnInitializedAsync()
    {

        receiptModel = ReceiptAdapter.GetReceipt();

    }

    private void HandleValidSubmit()
    {
        model = new CategoryDto();
        this.StateHasChanged();
    }

    protected void Edit()
    {
        _navigationManager.NavigateTo("/categories/");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

    }
    public void IsReceiptsExpenditures()
    {
        if(Approved)
        {
            receiptModel = ReceiptAdapter.GetReceipt();

        }
        else
        {
            expenditureModel = ExpenditureAdapter.GetExpenditure();

        }

        Approved = !Approved;
        model.IsIncome = Approved;
    }
}