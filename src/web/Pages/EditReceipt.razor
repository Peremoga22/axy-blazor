@page "/edit-receipt"
@page "/edit-receipt/{Id:int}"
@inject NavigationManager _navigationManager


    <div class="jumbotron">
        <EditForm Model="@model" OnValidSubmit="HandleValidSubmit" class="card-body">
            <DataAnnotationsValidator />
            <div class="row">
                @if (Id > 0)
                {
                    <h3 class="ml-sm-3 m-auto">Edit Receipt</h3>
                    <div class="ml-sm-3 m-auto">
                        <button class="btn btn-outline-danger" @onclick="(() => Delete(model.Id))">Delete</button>
                    </div>
                }
                else
                {
                    <h3 class="ml-sm-3 m-auto">Add new Receipt </h3>
                }

            </div>
            <div class="shadow-primary-lg p-3 mb-2 rounded">
                <div class="row d-flex">
                    <div class="col-lg-12 form-group">
                        <label for="promotions-title">Title:<span style="color:red;">*</span></label>
                        <InputText id="title" @bind-Value="model.Name" class="form-control promotions-datepicker" />
                    </div>
                    <div class="col-lg-12 form-group">
                        <label for="promotions-description">
                            <a asp-action="Categories">
                            </a>Short Description:<span style="color:red;">*</span>
                        </label>
                        <InputNumber id="description" @bind-Value="model.Sum" class="form-control" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="ml-sm-3 m-auto">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <NavLink class="btn btn-outline-secondary" href="/categories">Cancel</NavLink>
                </div>
            </div>
        </EditForm>
    </div>





@code {
    [Parameter]
    public int Id { get; set; }

    ReceiptDto model = new ReceiptDto();

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
             model = ReceiptAdapter.GetReceiptDtoId(Id);
        }
        else
        {
            model = new ReceiptDto();
        }

    }

    private void HandleValidSubmit()
    {
        ReceiptAdapter.SaveReceipt(model);
        _navigationManager.NavigateTo("/categories");
    }

    private void Delete(int id)
    {

    }
}
