@page "/categories"
@inject NavigationManager _navigationManager
@inject IJSRuntime _jsRuntime


<div class="text-center">

    <div>
        <div >
            <h3>Categories</h3>
            <br />
            <p style="color:red">@message</p>
            <div class="row">
                <div class="col-sm-6">
                    <h5 class="text-left">Receipts</h5>
                    <table class="table ">
                        <thead>
                            <tr>
                                <th class="text-center">Name</th>
                                <th class="text-right">Sum</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in receipts)
                            {
                                <tr>
                                    <td class="text-center" style="color:green">@item.Name</td>
                                    <td class="text-right" style="color:green">@item.Sum</td>
                                    <td class="text-center">
                                        <button class="btn btn-sm btn-outline-dark">
                                            <i @onclick="(() => EditReceipt(item.Id))" style='font-size:14px' class='far fa-edit'></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger">
                                            <img @onclick="(() => DeleteReceipt(item.Id))" disabled="@DeleteDisabled" src="https://img.icons8.com/ios/21/000000/delete-forever--v1.png" />
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="text-left">
                        <NavLink class="btn btn-outline-secondary" href="/edit-receipt">Add Receipt</NavLink>
                    </div>
                </div>
                <div class="col-sm-6">
                    <h5 class="text-left">Expenditures</h5>
                    <table class="table ">
                        <thead>
                            <tr>
                                <th class="text-center">Name</th>
                                <th class="text-right">Sum</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in expenditures)
                            {
                                <tr>
                                    <td class="text-center" style="color:red">@item.Name</td>
                                    <td class="text-right" style="color:red">@item.Sum</td>
                                    <td class="text-center">
                                        <button class="btn btn-sm btn-outline-dark">
                                            <i @onclick="(() => EditExpenditure(item.Id))" style='font-size:14px' class='far'>&#xf044;</i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger">
                                            <img @onclick="(() => DeleteExpenditure(item.Id))" disabled="@DeleteDisabled" src="https://img.icons8.com/ios/21/000000/delete-forever--v1.png" />
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="text-left">
                        <NavLink class="btn btn-outline-secondary" href="/edit-expenditure">Add Expenditure</NavLink>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@code{

    List<CategoryDto> model = new List<CategoryDto>();
    IEnumerable<ReceiptDto> receipts = new List<ReceiptDto>();
    IEnumerable<ExpenditureDto> expenditures = new List<ExpenditureDto>();
    string DeleteDisabled { get; set; } = null;
    string message;

    protected override async Task OnInitializedAsync()
    {
        receipts = ReceiptAdapter.GetReceipt();
        expenditures = ExpenditureAdapter.GetExpenditure();
    }

    protected void EditExpenditure(int id)
    {
        _navigationManager.NavigateTo("/edit-expenditure/" + id);
    }

    protected void EditReceipt(int id)
    {
        _navigationManager.NavigateTo("/edit-receipt/" + id);
    }

    private void DeleteReceipt(int id)
    {
        DeleteDisabled = "disabled";
        try
        {
            ReceiptAdapter.DeleteReceipt(id);
            receipts = ReceiptAdapter.GetReceipt();
            _jsRuntime.InvokeVoidAsync("loadScripts");

        }
        catch(Exception ex)
        {
            message = "Please delete the category first!";
        }

        DeleteDisabled = null;
    }

    private void DeleteExpenditure(int id)
    {
        DeleteDisabled = "disabled";
        try
        {
            ExpenditureAdapter.DeleteExpenditure(id);
            expenditures = ExpenditureAdapter.GetExpenditure();
            _jsRuntime.InvokeVoidAsync("loadScripts");
        }
        catch(Exception ex)
        {
            message = "Please delete the category first!";
        }

        DeleteDisabled = null;
    }
}


